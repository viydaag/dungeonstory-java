CREATE TABLE Class (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL, created TIMESTAMP NOT NULL, description TEXT, lifePointPerLevel INTEGER NOT NULL, name VARCHAR(255) NOT NULL, shortDescription VARCHAR(255), updated TIMESTAMP NOT NULL, version INTEGER, PRIMARY KEY (id));
CREATE TABLE Ability (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL, abbreviation VARCHAR(3), created TIMESTAMP NOT NULL, description TEXT, name VARCHAR(255), updated TIMESTAMP NOT NULL, version INTEGER, PRIMARY KEY (id));
CREATE TABLE Alignment (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL, created TIMESTAMP NOT NULL, description TEXT, name VARCHAR(255), shortDescription VARCHAR(255), updated TIMESTAMP NOT NULL, version INTEGER, PRIMARY KEY (id));
CREATE TABLE CharacterClass (classId BIGINT NOT NULL, characterId BIGINT NOT NULL, classLevel INTEGER, PRIMARY KEY (classId, characterId));
CREATE TABLE ArmorType (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL, baseArmorClass INTEGER NOT NULL, baseWeight INTEGER NOT NULL, created TIMESTAMP NOT NULL, description TEXT, maxDexBonus INTEGER NOT NULL, minStrength INTEGER NOT NULL, name VARCHAR(255) NOT NULL, proficiencyType VARCHAR(255) NOT NULL, speed INTEGER NOT NULL, stealthDisavantage BOOLEAN NOT NULL, updated TIMESTAMP NOT NULL, version INTEGER, PRIMARY KEY (id));
CREATE TABLE DamageType (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL, created TIMESTAMP NOT NULL, description VARCHAR(255), name VARCHAR(255), updated TIMESTAMP NOT NULL, version INTEGER, PRIMARY KEY (id));
CREATE TABLE ClassLevelBonus (classId BIGINT NOT NULL, levelId BIGINT NOT NULL, armorClassBonus INTEGER, abilityScoreImprovement BOOLEAN, spellBonus INTEGER, spellPerDay0 INTEGER, spellPerDay1 INTEGER, spellPerDay2 INTEGER, spellPerDay3 INTEGER, spellPerDay4 INTEGER, spellPerDay5 INTEGER, spellPerDay6 INTEGER, spellPerDay7 INTEGER, spellPerDay8 INTEGER, spellPerDay9 INTEGER, PRIMARY KEY (classId, levelId));
CREATE TABLE Feat (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL, created TIMESTAMP NOT NULL, description TEXT, name VARCHAR(255) NOT NULL, updated TIMESTAMP NOT NULL, featUsage VARCHAR(255) NOT NULL, version INTEGER, PRIMARY KEY (id));
CREATE TABLE ClassLevelBonusFeat (classId BIGINT NOT NULL, featId BIGINT NOT NULL, levelId BIGINT NOT NULL, PRIMARY KEY (classId, featId, levelId));
CREATE TABLE ClassSkill (skillId BIGINT NOT NULL, classId BIGINT NOT NULL, PRIMARY KEY (skillId, classId));
CREATE TABLE Region (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL, created TIMESTAMP NOT NULL, description TEXT, name VARCHAR(255) NOT NULL, shortDescription VARCHAR(255), updated TIMESTAMP NOT NULL, version INTEGER, PRIMARY KEY (id));
CREATE TABLE CharacterEquipment (characterId BIGINT NOT NULL, equipmentId BIGINT NOT NULL, quantity INTEGER, sellableValue NUMERIC(38), PRIMARY KEY (characterId, equipmentId));
CREATE TABLE Shop (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL, created TIMESTAMP NOT NULL, description TEXT, name VARCHAR(255), updated TIMESTAMP NOT NULL, version INTEGER, PRIMARY KEY (id));
CREATE TABLE WeaponType (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL, baseWeight INTEGER, created TIMESTAMP NOT NULL, description TEXT, handleType VARCHAR(255) NOT NULL, isFinesse BOOLEAN, isLoading BOOLEAN, isReach BOOLEAN, name VARCHAR(255) NOT NULL, oneHandBaseDamage VARCHAR(255), proficiencyType VARCHAR(255) NOT NULL, rangeType VARCHAR(255), sizeType VARCHAR(255) NOT NULL, twoHandBaseDamage VARCHAR(255), updated TIMESTAMP NOT NULL, usageType VARCHAR(255) NOT NULL, version INTEGER, damageTypeId BIGINT NOT NULL, PRIMARY KEY (id));
CREATE TABLE Level (id BIGINT NOT NULL, created TIMESTAMP NOT NULL, maxExperience BIGINT, proficiencyBonus INTEGER, updated TIMESTAMP NOT NULL, version INTEGER, PRIMARY KEY (id));
CREATE TABLE FeatPrerequisite (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL, abilityValue INTEGER, baseAttackBonus INTEGER, created TIMESTAMP NOT NULL, level INTEGER, skillRank INTEGER, type VARCHAR(255) NOT NULL, updated TIMESTAMP NOT NULL, version INTEGER, featId BIGINT NOT NULL, abilityId BIGINT, classId BIGINT, featPrerequisiteId BIGINT, skillId BIGINT, PRIMARY KEY (id));
CREATE TABLE Race (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL, ageModifier VARCHAR(255), averageHeight INTEGER, averageWeight INTEGER, chaModifier INTEGER, conModifier INTEGER, created TIMESTAMP NOT NULL, description TEXT, dexModifier INTEGER, heightModifier VARCHAR(255), intModifier INTEGER, maxAge INTEGER, minAge INTEGER, name VARCHAR(255) NOT NULL, shortDescription VARCHAR(255), strModifier INTEGER, updated TIMESTAMP NOT NULL, version INTEGER, weightModifier VARCHAR(255), wisModifier INTEGER, favoredClassId BIGINT, PRIMARY KEY (id));
CREATE TABLE Equipment (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL, type VARCHAR(31), created TIMESTAMP NOT NULL, description TEXT, isMagical BOOLEAN NOT NULL, isPurchasable BOOLEAN NOT NULL, isSellable BOOLEAN NOT NULL, name VARCHAR(255) NOT NULL, updated TIMESTAMP NOT NULL, version INTEGER, weight REAL NOT NULL, PRIMARY KEY (id));
CREATE TABLE Weapon (id BIGINT NOT NULL, additionalDamage VARCHAR(255), damage VARCHAR(255), magicalBonus INTEGER, additionalDamageTypeId BIGINT, weaponTypeId BIGINT, PRIMARY KEY (id));
CREATE TABLE Armor (id BIGINT NOT NULL, acBonus INTEGER, arcaneSpellFailure INTEGER, armorCheckPenalty INTEGER, magicalAcBonus INTEGER, armorTypeId BIGINT, PRIMARY KEY (id));
CREATE TABLE Adventure (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL, created TIMESTAMP NOT NULL, description TEXT, name VARCHAR(255) NOT NULL, status VARCHAR(255) NOT NULL, updated TIMESTAMP NOT NULL, version INTEGER, creatorId BIGINT, PRIMARY KEY (id));
CREATE TABLE DSCharacter (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL, age INTEGER NOT NULL, background TEXT, baseArmorClass INTEGER NOT NULL, created TIMESTAMP NOT NULL, experience BIGINT NOT NULL, gender CHAR NOT NULL, heigth INTEGER NOT NULL, level INTEGER NOT NULL, lifePoints INTEGER NOT NULL, look TEXT, name VARCHAR(255) NOT NULL, personnality TEXT, updated TIMESTAMP NOT NULL, version INTEGER, weight INTEGER NOT NULL, adventureId BIGINT, alignmentId BIGINT NOT NULL, raceId BIGINT NOT NULL, regionId BIGINT NOT NULL, PRIMARY KEY (id));
CREATE TABLE AccessRole (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL, created TIMESTAMP NOT NULL, name VARCHAR(255), updated TIMESTAMP NOT NULL, version INTEGER, PRIMARY KEY (id));
CREATE TABLE User (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL, created TIMESTAMP NOT NULL, email VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, status VARCHAR(255) NOT NULL, updated TIMESTAMP NOT NULL, username VARCHAR(255) NOT NULL, version INTEGER, roleId BIGINT, CHARACTER_id BIGINT, PRIMARY KEY (id));
CREATE TABLE Skill (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL, created TIMESTAMP NOT NULL, description TEXT, name VARCHAR(255), updated TIMESTAMP NOT NULL, version INTEGER, keyAbilityId BIGINT NOT NULL, PRIMARY KEY (id));
CREATE TABLE Message (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL, created TIMESTAMP NOT NULL, isXpGiven BOOLEAN, text TEXT, title VARCHAR(255) NOT NULL, updated TIMESTAMP NOT NULL, version INTEGER, adventureId BIGINT, characterId BIGINT, PRIMARY KEY (id));
CREATE TABLE CharacterFeat (featId BIGINT NOT NULL, characterId BIGINT NOT NULL, PRIMARY KEY (featId, characterId));
CREATE TABLE CharacterProficientSkill (characterId BIGINT NOT NULL, skillId BIGINT NOT NULL, PRIMARY KEY (characterId, skillId));
ALTER TABLE Ability ADD CONSTRAINT UNQ_Ability_4 UNIQUE (name);
ALTER TABLE Alignment ADD CONSTRAINT UNQ_Alignment_3 UNIQUE (name);
ALTER TABLE DamageType ADD CONSTRAINT UNQ_DamageType_3 UNIQUE (name);
ALTER TABLE Feat ADD CONSTRAINT UNQ_Feat_3 UNIQUE (name);
ALTER TABLE Region ADD CONSTRAINT UNQ_Region_3 UNIQUE (name);
ALTER TABLE Shop ADD CONSTRAINT UNQ_Shop_3 UNIQUE (name);
ALTER TABLE Equipment ADD CONSTRAINT UNQ_Equipment_7 UNIQUE (name);
ALTER TABLE AccessRole ADD CONSTRAINT UNQ_AccessRole_2 UNIQUE (name);
ALTER TABLE User ADD CONSTRAINT UNQ_User_7 UNIQUE (username);
ALTER TABLE Skill ADD CONSTRAINT UNQ_Skill_3 UNIQUE (name);
ALTER TABLE CharacterClass ADD CONSTRAINT FK_CharacterClass_classId FOREIGN KEY (classId) REFERENCES Class (id);
ALTER TABLE CharacterClass ADD CONSTRAINT FK_CharacterClass_characterId FOREIGN KEY (characterId) REFERENCES DSCharacter (id);
ALTER TABLE ClassLevelBonus ADD CONSTRAINT FK_ClassLevelBonus_levelId FOREIGN KEY (levelId) REFERENCES Level (id);
ALTER TABLE ClassLevelBonus ADD CONSTRAINT FK_ClassLevelBonus_classId FOREIGN KEY (classId) REFERENCES Class (id);
ALTER TABLE ClassLevelBonusFeat ADD CONSTRAINT FK_ClassLevelBonusFeat_levelId FOREIGN KEY (levelId) REFERENCES Level (id);
ALTER TABLE ClassLevelBonusFeat ADD CONSTRAINT FK_ClassLevelBonusFeat_classId FOREIGN KEY (classId) REFERENCES Class (id);
ALTER TABLE ClassLevelBonusFeat ADD CONSTRAINT FK_ClassLevelBonusFeat_featId FOREIGN KEY (featId) REFERENCES Feat (id);
ALTER TABLE ClassSkill ADD CONSTRAINT FK_ClassSkill_skillId FOREIGN KEY (skillId) REFERENCES Skill (id);
ALTER TABLE ClassSkill ADD CONSTRAINT FK_ClassSkill_classId FOREIGN KEY (classId) REFERENCES Class (id);
ALTER TABLE CharacterEquipment ADD CONSTRAINT FK_CharacterEquipment_characterId FOREIGN KEY (characterId) REFERENCES DSCharacter (id);
ALTER TABLE CharacterEquipment ADD CONSTRAINT FK_CharacterEquipment_equipmentId FOREIGN KEY (equipmentId) REFERENCES Equipment (id);
ALTER TABLE WeaponType ADD CONSTRAINT FK_WeaponType_damageTypeId FOREIGN KEY (damageTypeId) REFERENCES DamageType (id);
ALTER TABLE FeatPrerequisite ADD CONSTRAINT FK_FeatPrerequisite_featId FOREIGN KEY (featId) REFERENCES Feat (id);
ALTER TABLE FeatPrerequisite ADD CONSTRAINT FK_FeatPrerequisite_classId FOREIGN KEY (classId) REFERENCES Class (id);
ALTER TABLE FeatPrerequisite ADD CONSTRAINT FK_FeatPrerequisite_abilityId FOREIGN KEY (abilityId) REFERENCES Ability (id);
ALTER TABLE FeatPrerequisite ADD CONSTRAINT FK_FeatPrerequisite_featPrerequisiteId FOREIGN KEY (featPrerequisiteId) REFERENCES FeatPrerequisite (id);
ALTER TABLE FeatPrerequisite ADD CONSTRAINT FK_FeatPrerequisite_skillId FOREIGN KEY (skillId) REFERENCES Skill (id);
ALTER TABLE Race ADD CONSTRAINT FK_Race_favoredClassId FOREIGN KEY (favoredClassId) REFERENCES Class (id);
ALTER TABLE Weapon ADD CONSTRAINT FK_Weapon_additionalDamageTypeId FOREIGN KEY (additionalDamageTypeId) REFERENCES DamageType (id);
ALTER TABLE Weapon ADD CONSTRAINT FK_Weapon_weaponTypeId FOREIGN KEY (weaponTypeId) REFERENCES WeaponType (id);
ALTER TABLE Weapon ADD CONSTRAINT FK_Weapon_id FOREIGN KEY (id) REFERENCES Equipment (id);
ALTER TABLE Armor ADD CONSTRAINT FK_Armor_id FOREIGN KEY (id) REFERENCES Equipment (id);
ALTER TABLE Armor ADD CONSTRAINT FK_Armor_armorTypeId FOREIGN KEY (armorTypeId) REFERENCES ArmorType (id);
ALTER TABLE Adventure ADD CONSTRAINT FK_Adventure_creatorId FOREIGN KEY (creatorId) REFERENCES User (id);
ALTER TABLE DSCharacter ADD CONSTRAINT FK_DSCharacter_raceId FOREIGN KEY (raceId) REFERENCES Race (id);
ALTER TABLE DSCharacter ADD CONSTRAINT FK_DSCharacter_regionId FOREIGN KEY (regionId) REFERENCES Region (id);
ALTER TABLE DSCharacter ADD CONSTRAINT FK_DSCharacter_alignmentId FOREIGN KEY (alignmentId) REFERENCES Alignment (id);
ALTER TABLE DSCharacter ADD CONSTRAINT FK_DSCharacter_adventureId FOREIGN KEY (adventureId) REFERENCES Adventure (id);
ALTER TABLE User ADD CONSTRAINT FK_User_CHARACTER_id FOREIGN KEY (CHARACTER_id) REFERENCES DSCharacter (id);
ALTER TABLE User ADD CONSTRAINT FK_User_roleId FOREIGN KEY (roleId) REFERENCES AccessRole (id);
ALTER TABLE Skill ADD CONSTRAINT FK_Skill_keyAbilityId FOREIGN KEY (keyAbilityId) REFERENCES Ability (id);
ALTER TABLE Message ADD CONSTRAINT FK_Message_adventureId FOREIGN KEY (adventureId) REFERENCES Adventure (id);
ALTER TABLE Message ADD CONSTRAINT FK_Message_characterId FOREIGN KEY (characterId) REFERENCES DSCharacter (id);
ALTER TABLE CharacterFeat ADD CONSTRAINT FK_CharacterFeat_featId FOREIGN KEY (featId) REFERENCES Feat (id);
ALTER TABLE CharacterFeat ADD CONSTRAINT FK_CharacterFeat_characterId FOREIGN KEY (characterId) REFERENCES DSCharacter (id);
ALTER TABLE CharacterProficientSkill ADD CONSTRAINT FK_CharacterProficientSkill_characterId FOREIGN KEY (characterId) REFERENCES DSCharacter (id);
ALTER TABLE CharacterProficientSkill ADD CONSTRAINT FK_CharacterProficientSkill_skillId FOREIGN KEY (skillId) REFERENCES Skill (id);
